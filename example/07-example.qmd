---
title: "Causality"
---



```{r setup, include=FALSE}
# set knit options
knitr::opts_chunk$set(
  fig.width=9, 
  fig.height=5, 
  fig.retina=3,
  fig.align="center",
  out.width = "100%",
  cache = FALSE,
  echo = TRUE,
  message = FALSE, 
  warning = FALSE
)

# source in functions
source(here::here("R", "funcs.R"))

library(juanr)
library(broom)
```





## In-class example


Here's the code we'll be using in class. Download it and store it with the rest of your materials for this course. If simply clicking doesn't trigger download, you should right-click and select "save link as..."

- [<i class="fas fa-file-archive"></i> `07-causality.R`](/files/example-scripts/07-causality.R)



## class: make up a relationship



We use `rnorm` to simulate data. Three arguments: number of draws, mean, standard deviation:

```{r}
rnorm(n = 5, mean = 10, sd = 2)
```


We made up this data:


```{r}
fake_election = tibble(party_share = rnorm(n = 500, mean = 50, sd = 5), 
                       funding = rnorm(n = 500, mean = 20000, sd = 4000) + 2000 * party_share)
fake_election
```


We can plot it:


```{r}
ggplot(fake_election, aes(x = party_share, y = funding)) + geom_point() + geom_smooth(method = "lm")
```



Notice we made the causal effect equal 2000 dollars per percent of the vote won. We can estimate this and get pretty close using OLS:

```{r}
mod = lm(funding ~ party_share, data = fake_election)
tidy(mod)
```


It's close but not perfect because there is "noise" in our data. These numbers are *randomly* generated!


## class: confounds


Here we want to make it so a third variable, "the south", confounds the relationship between the number of waffle houses in a state and the divorce rate:

```{r, echo = TRUE}
fake = tibble(south = sample(c(0, 1), size = 50, replace = TRUE), 
              waffle = rnorm(n = 50, mean = 20, sd = 4) + 10 * south,
              divorce = rnorm(n = 50, mean = 20, sd = 2) + 8 * south)
fake
```


We can plot:

```{r}
ggplot(fake, (aes(x = waffle, y = divorce))) + geom_point() + geom_smooth(method = "lm")
```


We can model to retrieve the confounded estimate:


```{r}
lm(divorce ~ waffle, data = fake) |> broom::tidy()
```

