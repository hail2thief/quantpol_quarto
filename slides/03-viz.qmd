---
title: "Data visualization II"
subtitle: "POL51"
author: "Juan F. Tellez"
institute: "University of California, Davis"
date: today
date-format: long
format:
  revealjs: 
    slide-number: true
    height: 900
    width: 1600
    code-line-numbers: true
    smooth-scrawl: true
    theme: [simple, html/custom.scss]
    incremental: true
    title-slide-attributes:
      data-background-image: img/dubois-spiral-2.png
      data-background-size: contain
      data-background-position: right
      data-background-color: "#dc354a"
---


```{r setup, include=FALSE}
# set knit options
knitr::opts_chunk$set(
  fig.width=9, 
  fig.height=5, 
  fig.retina=3,
  fig.align="center",
  out.width = "100%",
  cache = FALSE,
  echo = FALSE,
  message = FALSE, 
  warning = FALSE
)

# libraries
library(gapminder)
library(socviz)

# source
source(here::here("R/funcs.R"))


# subset data to focus on 2007
gap_07 = 
  gapminder %>% 
  filter(year == 2007)


# calculate average life span by year
life_yr = 
  gapminder %>% 
  select(year, lifeExp) %>% 
  group_by(year) %>% 
  summarise(avg_yrs = mean(lifeExp))

# calculate average life expectancy by continent
life_region = 
  gap_07 %>% 
  group_by(continent) %>% 
  summarise(avg_yrs = mean(lifeExp))

# calculate average life expectancy by continent-year
life_region_yr = 
  gapminder %>% 
  group_by(continent, year) %>% 
  summarise(avg_yrs = mean(lifeExp))

```


# Plan for today {.center background-color="#dc354a"}


- A graph for every season
- The five(ish) graphs
- Making graphs pretty or ugly


# A graph for every season {.center}


- There are many graphs out there

- Each one works best in a specific **context**

- Each one combines different **aesthetics** and **geometries**




# Key plotting questions {.center}


- What am I trying to **show**? 

    - (a distribution, a relationship, a comparison, an amount)

- What **kind** of variables do I have? 

    - (continuous, discrete, something in between)

- What **aesthetics** and **geometries** do I need for this plot? 

    - (x-axis, y-axis, color, size, shape, etc.)




## What kind of variable do I have?


```{r}
gss_sm |> 
  select(id, age, degree, race, num_kids = childs) |> 
  slice(1:5) |> 
  kbl(digits = 0, caption = "General Social Survey") %>% 
  kable_styling(bootstrap_options = c("striped", "hover")) |> 
  column_spec(column = c(2, 5), bold = TRUE, background = yellow)
```


**Continuous** variables take on lots of values (GDP, population, income, age, etc.)


## What kind of variable do I have?


```{r}
gss_sm |> 
  select(id, age, degree, race, num_kids = childs) |> 
  slice(1:5) |> 
  kbl(digits = 0, caption = "General Social Survey") %>% 
  kable_styling(bootstrap_options = c("striped", "hover")) |> 
  column_spec(column = c(3, 4), bold = TRUE, background = yellow)
```


*Discrete* or **categorical** variables takes on a few values, often "qualitative" (yes/no, 1/0, race, etc.)



## Graph 1 - the scatterplot


```{r,out.width="80%"}
ggplot(gap_07, aes(x = gdpPercap, y = lifeExp)) +
  geom_point(size = 1.5, color = blue) +
  annotate(geom = "rect", xmin = 8500, xmax = 15000, ymin = 48, ymax = 58, 
           fill = red, alpha = .4) + labs(x = "GDP per capita", y = "Life expectancy", title = "Global wealth and health in 2007") 
```

. . .

The **scatterplot** visualizes the relationship between two **continuous** variables

. . .

Shows every point in the data, reveals trends and *outliers*


## The grammar of scatterplots


::: columns
::: {.column width="50%"}

::: {.fragment}
```{r}
gap_07 |> select(gdpPercap, lifeExp) |> 
  slice_head(n = 5) |> 
  kable(digits = 2, caption = "The data")
```
:::


:::


::: {.column width="50%"}

::: {.fragment}
```{r}
df = tribble(~Data, ~Aesthetic, ~Geometry, 
             "gdpPercap", "x", "geom_point()", 
             "lifeExp", "y", "geom_point()")
knitr::kable(df, caption = "Mapping the data")
```
:::

:::
:::

<br>

. . .

```{r, echo = TRUE, eval = FALSE}
ggplot(gap_07, aes(x = gdpPercap, y = lifeExp)) +
  geom_point()
```




Typically, we put the **cause** on the x-axis and the **effect** on the y-axis



## Scatterplots are for *continuous* variables


```{r,out.width="80%"}
ggplot(gap_07, aes(x = continent, y = pop)) +
  geom_point()
```


Plot is uninformative because continent is *discrete* (i.e., a category)


## Graph 2: the time series


```{r,out.width="80%",echo = FALSE}
ggplot(life_yr, aes(x = year, y = avg_yrs)) +
  geom_line(size = 1.8, color = red) +
  labs(y = "Average life expectancy (years)",
       title = "Global average life expectancy over time")
```

The **time series** uses a *line* to show you how a variable (y-axis) moves over time (x-axis)


## The grammar of time series


::: columns
::: {.column width="50%"}

::: {.fragment}
```{r}
life_yr |> 
  slice_head(n = 5) |> 
  kable(digits = 2, caption = "The data")
```
:::


:::


::: {.column width="50%"}

::: {.fragment}
```{r}
df = tribble(~Data, ~Aesthetic, ~Geometry, 
             "year", "x", "geom_line()", 
             "avg_yrs", "y", "geom_line()")
knitr::kable(df, caption = "Mapping the data")
```
:::

:::
:::

<br>

. . .


Notice the new geometry, `geom_line()`


## The time series


```{r, echo = TRUE, eval = TRUE}
ggplot(life_yr, aes(x = year, y = avg_yrs)) +
  geom_line()
```



## 🚨 Your turn: 💸Recession💸 🚨
  
  
  
- Look at the `economics` dataset from the `tidyverse` package

- Type and run `economics` to see the data

- Type and run `?economics` to read about the data

- Make a time series of unemployment over time

- Can you identify the **recessions**?
  
  
```{r}
countdown::countdown(minutes = 5L)
```


## Multiple time series


Sometimes we observe multiple **units** over time; how can we visualize these?
  
  
```{r}
gapminder_sample = 
  gapminder %>% 
  filter(country %in% c("Bolivia", "China", "Germany", "United States", "Denmark", 
                        "Ghana", "Egypt"))
knitr::kable(sample_n(gapminder_sample, size = 5))
```


## Start from scratch

```{r,echo =TRUE}
ggplot(data = gapminder_sample) 
```



## Add aesthetics

```{r,echo=TRUE}
ggplot(data = gapminder_sample, aes(x = year, y = lifeExp)) 
```



## Add geometry: 🤢

```{r,echo=TRUE}
ggplot(data = gapminder_sample, aes(x = year, y = lifeExp)) +
  geom_line()
```



## using `color` to separate lines

```{r,echo=TRUE, out.width="80%"}
ggplot(data = gapminder_sample, aes(x = year, y = lifeExp, color = country)) + 
  geom_line()
```






## Multiple time series

```{r, out.width="60%", echo = TRUE}
ggplot(data = gapminder_sample, aes(x = year, y = lifeExp, color = country)) + 
  geom_line()
```

. . .

These are useful for *comparing* **trends** across units (countries, places, people, etc)


## Graph 3: the histogram


```{r, echo = FALSE,out.width="60%"}
ggplot(gap_07, aes(x = lifeExp)) +
  geom_histogram(color = "white", fill = blue) + 
  labs(x = "Life expectancy (years)", y = NULL, 
       title = "Life expectancy across the world")
```

A **histogram** shows you how a continuous variable is *distributed*


## Interpreting histograms
  
  
```{r}
gap_07 %>% 
  select(lifeExp, gdpPercap, pop) %>% 
  pivot_longer(everything()) %>% 
  mutate(name = case_when(name == "pop" ~ "Population",
                          name == "lifeExp" ~ "Life expectancy",
                          name == "gdpPercap" ~ "GDP per capita")) |> 
  ggplot(aes(x = value, fill = name)) + 
  geom_histogram(color = "white") + 
  facet_wrap(vars(name), scales = "free") + 
  theme(legend.position = "none") + 
  labs(x = NULL, y = NULL)
```

::: {.notes}
What do we see here?
:::


## The grammar of histograms


::: columns
::: {.column width="50%"}

::: {.fragment}
```{r}
gap_07 |> 
  select(lifeExp) |> 
  slice_head(n = 5) |> 
  kable(digits = 2, caption = "The data")
```
:::


:::


::: {.column width="50%"}

::: {.fragment}
```{r}
df = tribble(~Data, ~Aesthetic, ~Geometry, 
             "lifeExp", "x", "geom_histogram()")
knitr::kable(df, caption = "Mapping the data")
```
:::

:::
:::

<br>

. . .


Notice the new geometry, `geom_histogram()`; and that a histogram *only* uses the x-axis!


## The histogram


```{r, echo = TRUE}
ggplot(gap_07, aes(x = lifeExp)) + geom_histogram()
```



## 🚨 Your turn: organs 🫁🧠 🚨 



::: columns
::: {.column width="50%"}
In some countries, when you die it is **assumed** you want to donate your organs

- To not donate, you have to **opt out**

- In other countries, when you die it is **assumed** you *do not* want to donate your organs

- To not donate, you have to **opt in**
:::

::: {.column width="50%"}
```{r}
organdata |> 
  select(country, donors, opt) |> 
  sample_n(5) |> 
  kbl(digits = 1, caption = "Sample from organdata")
```

:::
:::




## 🚨 Your turn: organs 🫁🧠 🚨 



Using the `organdata` dataset:


1. Make a histogram of country's organ donation rate (`donors`)


2. Then set the fill aesthetic to `opt`, whether donors have to opt in or opt out of donating. How does the graph change?


```{r}
countdown::countdown(minutes = 5L)
```


## Graph 4: the barplot


```{r,out.width="80%"}
tv = gss_cat %>% 
  group_by(marital) %>% 
  summarise(tv = mean(tvhours, na.rm = TRUE)) 

ggplot(tv, aes(y = fct_reorder(marital, tv), x = tv)) + 
  geom_col(color = "white", fill = blue) + 
  labs(y = "Average hours of tv watched per day", 
       x = NULL, title = "TV and marriage in the USA")
```

. . .

Barplots place a *category* (place, country, person, etc) on one axis and a *quantity* (amount, average, median, etc.) on another

. . .

Useful for making **comparisons**, highlighting **differences**


::: {.notes}
Why would there be differences across TV consumption?
:::


## The grammar of barplots


::: columns
::: {.column width="50%"}

::: {.fragment}
```{r}
tv |> 
  slice_head(n = 5) |> 
  kable(digits = 2, caption = "The data")
```
:::


:::


::: {.column width="50%"}

::: {.fragment}
```{r}
df = tribble(~Data, ~Aesthetic, ~Geometry, 
             "tv", "x", "geom_col()",
             "marital", "y", "geom_col()")
knitr::kable(df, caption = "Mapping the data")
```
:::

:::
:::

<br>

. . .


::: {.callout-note}
You could switch the x and y mapping around, but I think categories look better on the y-axis
:::


## The barplot


```{r, echo = TRUE}
ggplot(tv, aes(y = marital, x = tv)) + 
  geom_col()
```



## Graph 5: the boxplot


```{r, out.width="80%"}
gapminder %>% 
  ggplot(aes(y = continent, 
             x = lifeExp, color = continent)) + 
  geom_boxplot() +
  labs(y = "Life expectancy", 
       x = NULL, 
       title = "Distribution of life expectancy across continents") + 
  theme(legend.position = "none")
```

. . .

Boxplots compare **distributions** of *continuous* variables across groups


::: {.notes}
 they show us *more* than the barplot which only gives us a quantity for each group
:::




## Compare distributions: the boxplot



::: columns
::: {.column width="50%"}
Boxplots contain a lot of info 🥵:

- bold line is the **median** observation
- box is the **middle** 50% of observations
- thin lines show you min and max value, *except...*
- the dots, which are **outlier** observations
:::

::: {.column width="50%"}
```{r}
gapminder %>% 
  ggplot(aes(y = continent, 
             x = lifeExp, color = continent)) + 
  geom_boxplot() +
  labs(y = "Life expectancy", 
       x = NULL, 
       title = "Distribution of life expectancy across continents") + 
  theme(legend.position = "none")
```
:::
:::

::: {.notes}
interpret
:::



## The grammar of boxplots


::: columns
::: {.column width="50%"}

::: {.fragment}
```{r}
gap_07 |> 
  select(continent, lifeExp) |> 
  slice_head(n = 5) |> 
  kable(digits = 2, caption = "The data")
```
:::


:::


::: {.column width="50%"}

::: {.fragment}
```{r}
df = tribble(~Data, ~Aesthetic, ~Geometry, 
             "contient", "y", "geom_boxplot()",
             "lifeExp", "x", "geom_boxplot()")
knitr::kable(df, caption = "Mapping the data")
```
:::

:::
:::

<br>

. . .


::: {.callout-note}
You could switch the x and y mapping around, but I think categories look better on the y-axis
:::


## The boxplot


```{r, echo = TRUE, out.width="80%"}
ggplot(gapminder, aes(y = continent, x = lifeExp)) + geom_boxplot()
```


## The five(-ish) graphs


```{r}
tribble(~Graph, ~`aes()`, ~`geom_`, ~Purpose,
        "Scatterplot", "x = cause, y = effect", "point()", "Relationships",
        "Time series", "x = date, y = variable", "line()", "Trends",
        "Histogram", "x = cont. variable", "histogram()", "Distributions",
        "Barplot", "y = category, x = quantity", "col()", "Compare amounts", 
        "Boxplot", "y = category, x = cont. variable", "boxplot()", "Compare distributions") %>% 
  kbl() |> 
  kable_styling(bootstrap_options = c("striped", "hover"))
```

. . .


Know how and when to use which!


# Making better graphs {background-color="#dc354a"}


- We've barely scratched the surface; there's many more aesthetics, geometries, and layers in `ggplot()`

- Here are some of my favorite ones

- And some ideas for making graphs better



## Showing "movement" using panels


```{r, out.width="80%"}
ggplot(gapminder, aes(x = lifeExp)) + 
  geom_histogram() + 
  facet_wrap(vars(year)) + 
  labs(title = "Distribution of life expectancy over time")
```

. . .

We can use **panels** to show *movement* of a variable across time, space, etc.


::: {.notes}
What is this graph showing us?
:::




## Using facet_wrap

```{r, echo = TRUE, out.width="60%"}
ggplot(gapminder, aes(x = lifeExp)) + geom_histogram()
```


## Using facet_wrap

```{r, echo = TRUE, out.width="60%"}
ggplot(gapminder, aes(x = lifeExp)) + geom_histogram() + 
  facet_wrap(vars(year)) 
```


::: {.callout-note}
Make sure the facetting variable is wrapped in `vars()`!
:::



## Make aesthetics static


```{r,echo = TRUE, out.width="60%"}
ggplot(gap_07, aes(x = gdpPercap, y = lifeExp)) + 
  geom_point(size = 4, color = "orange", shape = 2) 
```


Take your aesthetics out of `aes()` and into `geom()` to make them *static*




## Ridge plots (better than grouped histograms)


```{r, echo = TRUE, out.width="70%"}
library(ggridges)
ggplot(gapminder, aes(y = continent, x = lifeExp)) + geom_density_ridges() 
```

Ease visual comparison + kinda looks like the Joy Division album


## Beeswarm plots (alternative boxplots)


```{r, echo = TRUE, out.width="60%"}
library(ggbeeswarm)
ggplot(gapminder, aes(y = continent, x = lifeExp)) +  geom_quasirandom() 
```

Beeswarm plots tell us something boxplots don't: the number observations by group; used recently by the [NYT](https://www.nytimes.com/2022/09/11/nyregion/hasidic-yeshivas-schools-new-york.html)



## Use different color and fill scales


```{r, echo = TRUE, out.width="60%"}
ggplot(gapminder, aes(x = lifeExp, fill = continent)) + geom_histogram() + 
  scale_fill_brewer(palette = "Blues") 
```


`scale_fill_brewer()` for `fill`, `scale_color_brewer` for `color`




## My favorite scale (right now)

```{r, echo = TRUE, out.width="60%"}
ggplot(gapminder, aes(x = lifeExp, fill = continent)) + geom_histogram() + 
  scale_fill_viridis_d(option = "magma") 
```


`scale_fill_viridis_d` for *discrete* variables, `scale_fill_viridis_d` for continuous



## Many other themes

```{r,out.width="80%"}
library(tvthemes)
ggplot(gapminder, aes(x = lifeExp, fill = continent)) + 
  geom_histogram() + theme_spongeBob() + labs(title = "So ugly") + 
  scale_fill_spongeBob()
```

`theme_spongeBob()` from `tvthemes` package, many more online



## 🔥 Coding challenge 🔥


Right now you probably can't make a **nice** graph, so:


1. Make the **ugliest** graph you can


2. Post it on Slack


3. Winner will get a shockingly small amount of extra credit


```{r}
countdown::countdown(minutes = 20L)
```
